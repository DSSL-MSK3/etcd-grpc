syntax = "proto3";
package authpb;

// User is a single entry in the bucket authUsers
message User {
  bytes name = 1;
  bytes password = 2;
  repeated string roles = 3;
  uint64 modRevision = 4; // revision of auth store when user rights were modified
  // each path is unique in acl
  repeated AclEntry acl = 5;
  int64 aclRevision = 6;
}

// Permission is a single entity
message Permission {
  enum Type {
    READ = 0;
    WRITE = 1;
    READWRITE = 2;
  }
  Type permType = 1;

  bytes key = 2;
  bytes range_end = 3;
}

// Role is a single entry in the bucket authRoles
message Role {
  bytes name = 1;

  repeated Permission keyPermission = 2;
}

enum BuiltinRights {
  BUILTIN_RIGHTS_NONE = 0x00;
  BUILTIN_RIGHTS_VIEW = 0x01;
}

message PrototypeField {
  string key = 1;
  uint32 rightsRead = 2;
  uint32 rightsWrite = 3;
}

// Prototype is a single entry in the bucket authPrototypes
message Prototype {
  enum Flags {
    NONE = 0x00;
    FORCE_SUBOBJECTS_FIND = 0x01;
  }

  bytes name = 1;

  // each key is unique in fields
  repeated PrototypeField fields = 2;

  uint32 flags = 3;
}

message AclEntry {
  string path = 1;
  uint32 rightsSet = 2;
  uint32 rightsUnset = 3;
}

// For internal use only
message AclHelper {
  repeated AclEntry acl = 1;
}
